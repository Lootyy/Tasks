*, *::before, *::after {
    box-sizing: border-box;
}

#app {
    display: grid;
    grid-template-columns: 1fr 6fr 1fr;
    grid-template-rows: 10rem auto;
    grid-template-areas:    'Sidebar cards feed'
                            'Sidebar cards feed'
                            'Sidebar cards feed';
    height: 100vh;

    --type-1: #ff7575;
    --type-2: #63ff85;
    --type-3: #4dd6f8;
}

.HamburgerMenu {
    height: 1rem;
    stroke: #000;
    stroke-width: 2;
}

body {
    margin: 0;
    background-color: #ddd;
    font-family: sans-serif;
}

.Sidebar {
    grid-area: Sidebar;
}

.Sidebar__User {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1rem;
    gap: 1rem;
}

.Sidebar__User__Controls {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    width: 50%;
}

.Sidebar__User__Picture 
{
    aspect-ratio: 1 / 1;
    width: 5rem;
    border-radius: 5rem;
    background-color: #ddd;
}

.Sidebar__User__Controls__Menu 
{
    stroke: #555;
}

.Sidebar__User__Controls__Messages
{
    background-color: aqua;
    width: 2rem;
    height: 2rem;
}

.Sidebar__Header {
    background: #fff;
    padding: 1rem;
}

.Dropdown {
    cursor: pointer;
    display: flex;
    flex-direction: column;
    gap: .5rem;
}

.Dropdown__label {
    font-weight: bold;
}

.Dropdown[data-expanded=true] .Dropdown__indicator {
    transform: rotate(-90deg) rotateY(180deg);
}

.Dropdown__content {    
    position: relative; 
}

.Dropdown__preview {
    border-radius: .3rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: .5rem;
    padding: .5rem;
}

.Dropdown__indicator {
    height: 1rem;
    fill: none;
    stroke: #000;
    stroke-width: .1rem;
    transform-origin: center center;
    transition: transform 400ms;
    transform: rotate(-90deg);
}

.Dropdown__options {
    background: #fff;
    list-style: none;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: .5rem;
    margin: 0;
    padding: .5rem;
    position: absolute;
    width: 100%;
    border-radius: .3rem;
    box-shadow: 0 0 1rem #bbb;
    bottom: 0;
    transform: translate(0, calc(100% + 1rem));
    z-index: 2;
}

.CardList > .Dropdown__options
{
    bottom: unset;
    transform: translate(calc(100% - 1rem), 0);
    top: 2rem;
}

.Dropdown__option {
    border-radius: .2rem;
    padding: .5rem;
    display: flex;
}

.Dropdown__option:hover {
    background: #ccc;
}

.CardArea {
    grid-area: cards;
    display: flex;
    flex-direction: column;
    max-width: 100%;
    overflow: scroll hidden;
}

.CardList_Area {
    display: flex;
    flex-direction: row;
    gap: 2rem;
    margin: 1rem;
    min-height: 0;
    width: max-content;
    padding-inline-end: 1rem;
}

.CardList {    
    display: flex;
    flex-direction: column;
    flex: 0 0 14rem;
    position: relative;
    min-width: 0;
}

.CardList[data-transitionedfrom='left']
{
    animation: transitionListLeft 300ms;
}

.CardList[data-transitionedfrom='right']
{
    animation: transitionListRight 300ms;
}

@keyframes transitionListLeft
{
    from {
        transform: translate(calc(-100% - 2rem));
        pointer-events: none;
    }
    
    to {
        pointer-events: none;
        transform: 0;
    }
}

@keyframes transitionListRight
{
    from {
        transform: translate(calc(100% + 2rem));
    }
    
    to {
        transform: 0;
    }
}

.CardList__Content_wrapper {
    overflow: hidden;
    margin-block-end: -1.1rem;
}

.CardList__Content {
    display: flex;
    flex-direction: column;
    overflow: hidden scroll;
    margin-inline-end: -1.1rem;
    padding-block-end: max(14rem, var(--dragging-card-height));
    height: 100%;
}

.CardList.Horizontal {
    transition: flex 500ms;
    flex: 0 0 16rem;
    overflow: hidden;
}

.CardList.Horizontal[data-isminimized=true]
{
    flex: 0 0 2rem;
}

.CardList.Horizontal .CardList__Content {
    flex-direction: row;
    gap: 2rem;
    justify-content: flex-start;
    overflow: scroll hidden;
    flex: 0 0 15rem;
    padding-block-end: 1rem;
    margin-inline-end: 0;
    padding-inline: 1rem;
    scroll-behavior: smooth;
    min-height: 15rem;
}

.CardList.Horizontal .CardList__Header {
    padding-inline: 1rem;
}

.CardList__Header {
    padding: .5rem;
    border-radius: .3rem;
    font-weight: bold;
    transition: background-color 200ms;
    display: flex;
    justify-content: space-between;
}

.CardList__Controls {
    display: flex;
    gap: 1rem;
}

.CardList__Controls * {
    transition: stroke 50ms;
}

.CardList__Controls *:hover, .CardList[data-menuopen='true'] .CardList__Controls__Menu {
    stroke: #fff;
    cursor: pointer;
}

.CardList__Controls__Add {
    stroke-width: 3;
}

.CardList__Controls__Menu {
    stroke-width: 1.5;
}

.CardList__Controls svg {
    stroke: #000;
    height: 1rem;
}

.CardList[data-isdragging=true] :is(.Card, .CardList__Header)
{
    box-shadow: 0 0 1rem .5rem #bbb;
}

.CardList[data-isdragging=true] .CardList__Header {
    background-color: #fff;
}

.CardList[data-isdragging=true] {
    overflow: visible;
}

.CardList[data-isdragging=true] .CardList__Content_wrapper {
    overflow: visible;
}

.CardList[data-isdragging=true] .CardList__Content {
    overflow: visible;
    margin-inline-end: 0;
}

.Card_wrapper {
    background-color: transparent;
    padding-top: 1rem;
    display: flex;
    flex-direction: column;
    flex-basis: 13em;
    transition: gap 500ms;
    transition-delay: 150ms;
    gap: 0;
}

.CardList.Horizontal .Card_wrapper {
    flex-direction: row;
    gap: 2rem;
    max-height: 14rem;
}

.Card_wrapper[data-isdragging=true]
{
    overflow: hidden;
    flex-basis: 0;
    padding: 0;
}

.Card_wrapper[data-isdragover=true] * {
    pointer-events: none;
}

.Card_wrapper:hover:not([data-isdragover=true]) * {
    pointer-events: all;
}

.Card_wrapper > .Card_DropPreview
{   
    display: none;
    position: relative;
    width: 100%;
    background-color: #ccc;
    box-shadow: 0 0 1rem #ccc;
    height: 0;
    display: block;
    transition: height 500ms;
    transition-delay: 150ms;
    border-radius: .3rem;
}

.CardList.Horizontal .Card_wrapper > .Card_DropPreview 
{
    display: none;
    height: 100%;
    width: 14rem;
}

.Card_wrapper[data-droppedon=true]
{
    transition: gap 0ms;
}

.Card_wrapper[data-droppedon=true] > .Card_DropPreview
{
    transition: height 0ms;
    height: 0;
}

.Card_wrapper[data-isdragover='true']
{
    gap: 1rem;
}

.Card_wrapper[data-pickedup=true] + .Card_wrapper
{
    transition: gap 0ms;
    gap: 1rem;
}

.Card_wrapper[data-isdragover='true'] > .Card_DropPreview
{   
    height: var(--dragging-card-height);    
}

.Card_wrapper[data-pickedup=true] + .Card_wrapper > .Card_DropPreview
{
    transition: height 0ms;
    height: var(--dragging-card-height);
}

.Card {
    background: #fff;
    padding: .5rem;
    flex-basis: 12rem;
    box-shadow: 0 0 1rem #ccc;
    border-radius: .3rem;
    display: flex;
    flex-direction: column;
    gap: .5rem;
    max-height: 300px;
}

.CardList.Horizontal .Card {
    flex-basis: 14rem;
    width: 14rem;
}

.Card__Header {
    display: flex;
    justify-content: space-between;
    font-weight: bold;
    padding: .5rem
}

.Card__Content {
    flex-grow: 1;
    min-height: 0;
    cursor: pointer;
    overflow: hidden;
}

.Card__Content_Text {
    padding: .5rem;
    word-wrap: break-word;
    background: #eee;
    white-space: pre-line;
    border-radius: .5rem;
    height: 100%;
}

.Card__Content_TaskList {
    margin: 0;
}

.Card__Content_TaskList [data-checked=true] {
    text-decoration: line-through;
}

.Card__Header__Type {
    height: 1rem;
    width: 2rem;
    border-radius: 1rem;    
}

[data-tasktype='Type 1'] .Card__Header__Type {
    background: var(--type-1);
}

[data-tasktype='Type 2'] .Card__Header__Type {
    background: var(--type-2);
}

[data-tasktype='Type 3'] .Card__Header__Type {
    background: var(--type-3);
}

.Card__Footer {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: .5rem;
}

.Card__Footer__Assignee {
    aspect-ratio: 1 / 1;
    width: 1.5rem;
    background: #ddd;
    border-radius: 1rem;
}

.Card__Footer__Bookmark {
    position: relative;
    aspect-ratio: 1 / 1;
    height: 1.5rem;
    display: grid;
    place-items: center;
    margin-left: auto;
}

.Card__Footer__Bookmark input {
    appearance: none;
    height: 100%;
    aspect-ratio: 1 / 1 ;
    z-index: 2;
}

.Card__Footer__Bookmark svg {
    position: absolute;
    stroke: #666;
    fill: #666;
    pointer-events: none;
    stroke-width: 1;
}

.Card__Footer__Bookmark input:checked + svg {
   fill: #f3db56;
   stroke: #f3db56;
}

.FocusArea {
    padding-block: 1rem;
    display: flex;
    flex-direction: column;
    position: sticky;
    left: 0;
}

.Navbar {
    background: #fff;
    flex: 0 0 2rem;
    margin-inline: 1rem;
    position: sticky;
    left: 1rem;
}

.Feed {
    grid-area: feed;
    background: #fff;
    text-align: center;
}

.EditCardDialog {
    width: 30rem;
    border-radius: 1rem;
    border: none;
    outline: none;
}

.EditCardDialog__Form {
    display: flex;
    gap: 1rem;
    flex-direction: column;
}

.EditCardDialog__Header input {
    border: none;
    padding-block: .3rem;
    font-weight: bold;
    font-size: 1.5rem;
}

.EditCardDialog__Header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
    position: relative;
}

.EditCardDialog__TextContent {
    display: flex;
    flex-direction: column;
    gap: .5rem;
}

.EditCardDialog__Type {
    width: 10rem;
}

.EditCardDialog__Type .Dropdown__content {
    width: max-content;
}

.EditCardDialog__Type .Dropdown__options {
    width: fit-content;
}

.EditCardDialog__Type .Dropdown__option {
    padding: 0;
}

.EditCardDialog__Type :is(.Dropdown__option>span, .Dropdown__value)  {    
    padding: .3rem;
    border-radius: .2rem;
}

.EditCardDialog__Type :is([data-value='Type 1']>span, [data-value='Type 1'] .Dropdown__value) {
    background: var(--type-1);
}

.EditCardDialog__Type :is([data-value='Type 2']>span, [data-value='Type 2'] .Dropdown__value) {
    background: var(--type-2);
}

.EditCardDialog__Type :is([data-value='Type 3']>span, [data-value='Type 3'] .Dropdown__value) {
    background: var(--type-3);
}

.EditCardDialog__TextContent textarea {
    background: #eee;
    border: none;
    border-radius: .5rem;
    padding: .5rem;
    font-size: 1rem;
    height: 10rem;
}

.EditCardDialog__TextContent label {
    font-weight: bold;
}

.EditCardDialog__Tasks {
    display: flex;
    flex-direction: column;
    gap: .5rem;
}

.EditCardDialog__Tasks span {
    font-weight: bold;
}

.EditCardDialog__Tasks__List {
    list-style: none;
    padding: 0;
    margin: 0;
}

.EditCardDialog__Tasks__List div {
    display: flex;
}

.EditCardDialog__Tasks__List input {
    border: none;
    border-bottom: 1px solid #444;
}

.EditCardDialog__Footer {
    display: flex;
    justify-content: space-between;
}

.EditCardDialog__Footer button {
    border: none;
    padding: .5rem;
    width: 5rem;
    margin-left: auto;
    border-radius: .3rem;
}
















.no_content {
    grid-area: cards;
    background: #fff;
    border-radius: 1rem;
    padding: 3rem;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    font-size: 1.5rem;
}

.no_content button {
    padding: .5rem;
    font-size: 1.2rem;
    font-weight: bold;
    width: 10rem;
}